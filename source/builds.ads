--
--
--

with Sessions;

package Builds is


   procedure Find_Rule_Precedences (Session : in out Sessions.Session_Type);
   --  Find a precedence symbol of every rule in the grammar.
   --
   --  Those rules which have a precedence symbol coded in the input
   --  grammar using the "[symbol]" construct will already have the
   --  rp->precsym field filled.  Other rules take as their precedence
   --  symbol the first RHS symbol with a defined precedence.  If there
   --  are not RHS symbols with a defined precedence, the precedence
   --  symbol field is left blank.


   procedure Find_First_Sets (Session : in out Sessions.Session_Type);
   --  Find all nonterminals which will generate the empty string.
   --  Then go back and compute the first sets of every nonterminal.
   --  The first set is the set of all terminal symbols which can begin
   --  a string generated by that nonterminal.


   procedure Find_States (Session : in out Sessions.Session_Type);
   --  Compute all LR(0) states for the grammar.  Links are added to
   --  between some states so that the LR(1) follow sets can be
   --  computed later.

private

   pragma Export (C, Find_States, "cherry_find_states");

end Builds;
